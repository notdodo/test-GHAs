name: check version

on:
  workflow_dispatch:
    inputs:
      provider_namespace:
        description: "cose"
        required: true
        default: crowdstrike
      provider_name:
        description: "cose"
        required: true
        default: crowdstrike

jobs:
  check-version:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ github.event.inputs.provider_namespace }}
      NAME: ${{ github.event.inputs.provider_name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        # v4.2.2
        with:
          persist-credentials: false
      - id: latest
        run: |
          LATEST_VERSION=$(curl https://registry.terraform.io/v1/providers/${{ env.NAMESPACE }}/${{ env.NAME }}/versions | jq '[.versions[].version] | sort_by(split(".")|map(tonumber)) | last')
          echo "latest=$LATEST_VERSION" >> "$GITHUB_OUTPUT"
      - id: current
        run: |
          git fetch --tags
          search="pulumi-crowdstrike-v*"
          latest_tag=$(git tag -l "$search" --sort=-v:refname | head -n1)
          latest="${latest_tag##-v}"
          echo "current=$latest" >> "$GITHUB_OUTPUT"
      - if: steps.latest.outputs.latest != steps.current.outputs.current
        env:
          NEW: ${{ steps.latest.outputs.latest }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ env.NEW }}"
          git push --tags
          gh api repos/${{ github.repository }}/dispatches -f event_type="push_sdk" \ -f client_payloads='{"version": "${{ env.NEW }}"}'
